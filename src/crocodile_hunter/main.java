package crocodile_hunter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;
import crocodile_hunter.Unit;
import crocodile_hunter.Player;
import crocodile_hunter.Crocodile;
import crocodile_hunter.Map;

public class main{
	static String strCommands ="Command list:\n"
			+ "n = walk north ^\n"
			+ "e = walk east  >\n"
			+ "s = walk south v\n"
			+ "w = walk west  <\n"
			+ "m = Open map\n"
			+ "h = help\n"
			+ "d = end game\n";
	

	static int[] intCommandList=   {110,101,115,119,109,104,100};

	static int isRunning = 0;
	
	public static void main(String [ ] args) throws IOException{
		
		//boolean isRunning = true;
		int intPlayerCommand;
		int intCrocodileCommand;
		int intHeight;
		boolean win=false;
		String strPlayerMessage=null;
		String strCrocodileMessage=null;
		Scanner scanIn = new Scanner(System.in);
		
		//create Unit instances
		Player player = new Player(0,9,1);
		Crocodile crocodile = new Crocodile(8,3,2);
		
		
		System.out.println(strCommands);
		
		while(isRunning<40){

			System.out.println("Enter command: ");

			// identify player command
			intPlayerCommand=System.in.read();

			// execute command
			strPlayerMessage=player.executeCommand(intPlayerCommand, player, player, crocodile);
			
			// Checks if the player has won
			if (player.checkForMaximum(player,player.positionY,player.positionX)){
				win=true;
				break;
			};
			
			//This is necessary, but I don't know why
			scanIn.nextLine();
			
			strPlayerMessage+=player.getHeight(player);
			
			System.out.println(strPlayerMessage);
			
			// Choose crocodile command
			intCrocodileCommand=crocodile.chooseCommand(player, crocodile);
			
			// execute command
			strCrocodileMessage=crocodile.executeCommand(intCrocodileCommand, crocodile, player, crocodile);		
			
			// compare player and crocodile positions
			strCrocodileMessage+="\n"+crocodile.checkForPlayer(player, crocodile);
			
			System.out.println(strCrocodileMessage);
			
			
			
			isRunning++;
		}
		scanIn.close();
		if (win){
			// The sweet ASCII art was generated by this web site (font: Big): http://patorjk.com/software/taag 
			System.out.println(
					  "You reached the top of the mountain!\n"
					+ "__     __                    _      \n" 
					+ "\\ \\   / /                   (_)      \n"
					+ " \\ \\_/ /__  _   _  __      ___ _ __  \n"
					+ "  \\   / _ \\| | | | \\ \\ /\\ / / | '_ \\ \n"
					+ "   | | (_) | |_| |  \\ V  V /| | | | |\n"
					+ "   |_|\\___/ \\__,_|   \\_/\\_/ |_|_| |_|\n\n"
					+ "Thanks for playing!");
		}else if(!win){
			// The sweet ASCII art was generated by this web site (font: Big): http://patorjk.com/software/taag 
			System.out.println(
					  "You died.\n"
					+ "   _____                                            \n"
					+ "  / ____|                                           \n"
					+ " | |  __  __ _ _ __ ___   ___    _____   _____ _ __ \n"
					+ " | | |_ |/ _` | '_ ` _ \\ / _ \\  / _ \\ \\ / / _ \\ '__|\n"
					+ " | |__| | (_| | | | | | |  __/ | (_) \\ V /  __/ |   \n"
					+ "  \\_____|\\__,_|_| |_| |_|\\___|  \\___/ \\_/ \\___|_|   \n\n"
					+ "Thanks for playing!");
			
			/*String[] gameOver={"You died.",
					"   _____                                            ",
					"  / ____|                                           ",
					" | |  __  __ _ _ __ ___   ___    _____   _____ _ __ ",
					" | | |_ |/ _` | '_ ` _ \\ / _ \\  / _ \\ \\ / / _ \\ '__|",
					" | |__| | (_| | | | | | |  __/ | (_) \\ V /  __/ |   ",
					"  \\_____|\\__,_|_| |_| |_|\\___|  \\___/ \\_/ \\___|_|   \n",
					"Thanks for playing!"};
			
			for (int i=0;i<8;i++){
				System.out.println(gameOver[i]);
				try {
				    Thread.sleep(333);                 //1000 milliseconds is one second.
				} catch(InterruptedException ex) {
				    Thread.currentThread().interrupt();
				}
			}
			*/
		}
		
	}
}